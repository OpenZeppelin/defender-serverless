service: defender-test-project
configValidationMode: error
disabledDeprecations:
  - CLI_OPTIONS_SCHEMA_V3 # disables deprecation warning for secrets plugin
frameworkVersion: '3'

provider:
  name: defender
  stage: ${opt:stage, 'dev'}
  stackName: 'mystack'
  # SSOT: use this template as a single source of truth. 
  # This will delete Defender resources (with the exception of Relayers) not found in this template upon deployment.
  ssot: false  
  
custom:
  # weird bug with Secret Plugin requires you to always include --stage CLI param. Otherwise this becomes undefined
  config: ${file(secrets.${self:provider.stage}.yml)}

defender:
  key: ${self:custom.config.keys.api}
  secret: ${self:custom.config.keys.secret}

functions:
  autotask-example-1:
    name: 'Hello world from serverless'
    path: './hello-world'
    # optional
    relayer: ${self:resources.relayers.relayer-1}
    trigger:
      type: "schedule" # or webhook
      # optional if not cron
      frequency: 1500
      # optional if not frequency
      cron: null
    paused: false

resources:
  policies:
    policy-1:
      # optional
      gas-price-cap: 1000
      # optional
      whitelist-receivers:
        - "0x0f06aB75c7DD497981b75CD82F6566e3a5CAd8f2"
      # optional
      eip1559-pricing: true

  secrets:
    foo: ${self:custom.config.secrets.foo}
    hello: ${self:custom.config.secrets.hello}
    test: ${self:custom.config.secrets.test}
    world: ${self:custom.config.secrets.test}
    
  contracts:
    contract-2:
      name: "Demo-Flash"
      address: "0xA91382E82fB676d4c935E601305E5253b3829dCD"
      network: "rinkeby"
      # optional
      abi: ${file(./abis/demoflash.json.abi)}
      # optional
      nat-spec: null

  relayers:
    relayer-1:
      name: "Test Relayer 1"
      network: "rinkeby"
      min-balance: 1000
      # optional
      policy: ${self:resources.policies.policy-1}
    relayer-2:
      name: "Test Relayer 4"
      network: "mainnet"
      min-balance: 1000
      # optional (make sure relayer-1 is above current relayer)
      address-from-relayer: ${self:resources.relayers.relayer-1} 
      # optional
      policy: ${self:resources.policies.policy-1}
      # optional
      api-keys:
        - key1
        - key2
        - key5

  notifications:
    email-1:
      type: 'email'
      name: 'Nami'
      config: 
        emails: 
          - ${self:custom.config.notifications.nami}
      paused: false
    slack-1:
      type: 'slack'
      name: 'Workspace Slack'
      config: 
        url: ${self:custom.config.notifications.slack}
      paused: false

  sentinels:
    # unique resource name ?
    block-example:
      name: "Block Example"
      type: "BLOCK"
      network: "rinkeby"
      addresses: 
        - "0x0f06aB75c7DD497981b75CD82F6566e3a5CAd8f2"
      # optional
      abi: ${file(./abis/erc721.json.abi)}
      # optional
      alert-threshold: 
        amount: 2
        window-seconds: 3600
      # optional
      paused: false
      # optional
      autotask-condition: ${self:functions.autotask-example-1}
      # optional
      autotask-trigger: null
      # optional
      confirm-level: 1 # or 'safe' or 'finalized'
      notify-config:
        timeout: 0 # optional
        message: null # optional
        channels: 
          - ${self:resources.notifications.email-1}
      # optional
      conditions:
        event:
          -
            signature: "OwnershipTransferred(address,address)"
            expression: "previousOwner=0x0f06aB75c7DD497981b75CD82F6566e3a5CAd8f2" # optional
        function:
          -
            signature: "renounceOwnership()"
            expression: null # optional
        transaction: "gasPrice > 0" # optional expression
    forta-example:
      name: "Forta Example"
      type: "FORTA"
      network: "rinkeby"
      # optional if agent-ids is defined
      addresses: 
        - "0x0f06aB75c7DD497981b75CD82F6566e3a5CAd8f2"
        - "0x0f06aB75c7DD497981b75CD82F6566e3a5CAd8f3"
      # optional
      abi: ${file(./abis/erc721.json.abi)}
      # optional
      alert-threshold: 
        amount: 2
        window-seconds: 3600
      # optional
      paused: false
      # optional
      autotask-condition: ${self:functions.autotask-example-1}
      # optional
      autotask-trigger: null
      notify-config:
        timeout: 0 # optional
        message: null # optional
        channels: 
          - ${self:resources.notifications.slack-1}
      # optional
      conditions:
        min-scanner-count: 1
        severity: 2 # optional (unknown=0, info=1, low=2, medium=3, high=4, critical=5)
        # optional
        alert-ids:
          - "123"
          - "456"
      # optional
      forta-node-id: "123"
      # optional if addresses is defined
      agent-ids:
        - "0x8fe07f1a4d33b30be2387293f052c273660c829e9a6965cf7e8d485bcb871083"
      # optional
      forta-last-processed-time: null




plugins:
  - defender-serverless
  - serverless-secrets-plugin
  - serverless-confirm-command


