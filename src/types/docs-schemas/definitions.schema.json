{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Definitions",
  "definitions": {
    "address": { "title": "Address", "type": "string", "pattern": "^0x[a-fA-F0-9]{40}$" },
    "network": {
      "title": "Network",
      "type": "string",
      "enum": [
        "mainnet",
        "rinkeby",
        "ropsten",
        "kovan",
        "goerli",
        "xdai",
        "sokol",
        "fuse",
        "bsc",
        "bsctest",
        "fantom",
        "fantomtest",
        "moonbase",
        "moonriver",
        "moonbeam",
        "matic",
        "mumbai",
        "avalanche",
        "fuji",
        "optimism",
        "optimism-kovan",
        "optimism-goerli",
        "arbitrum",
        "arbitrum-rinkeby",
        "arbitrum-goerli",
        "celo",
        "alfajores",
        "harmony-s0",
        "harmony-test-s0",
        "aurora",
        "auroratest",
        "hedera",
        "hederatest",
        "x-dfk-avax-chain",
        "x-dfk-avax-chain-test",
        "zksync-goerli"
      ]
    },
    "policy": {
      "title": "Policy",
      "type": "object",
      "properties": {
        "gas-price-cap": { "type": "integer" },
        "whitelist-receivers": { "title": "WhitelistReceivers", "type": "array", "items": { "type": "string" } },
        "eip1559-pricing": { "type": "boolean" },
        "private-transactions": { "type": "boolean" }
      }
    },
    "relayer": {
      "title": "Relayer",
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "network": { "$ref": "definitions.schema.json/#/definitions/network", "format": "uri-reference" },
        "min-balance": { "type": "integer" },
        "address-from-relayer": {
          "title": "AddressFromRelayer",
          "type": "object"
        },
        "policy": { "$ref": "definitions.schema.json/#/definitions/policy", "format": "uri-reference" },
        "api-keys": {
          "title": "RelayerAPIKeys",
          "type": "array",
          "items": { "type": "string" }
        }
      },
      "required": ["name", "network", "min-balance"]
    },
    "contract": {
      "title": "Contract",
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "address": { "$ref": "definitions.schema.json/#/definitions/address", "format": "uri-reference" },
        "network": { "$ref": "definitions.schema.json/#/definitions/network", "format": "uri-reference" },
        "abi": { "type": "string" },
        "nat-spec": { "type": "string" }
      },
      "required": ["name", "address", "network"]
    },
    "notificationType": {
      "title": "NotificationType",
      "type": "string",
      "enum": ["slack", "email", "discord", "telegram", "datadog", "webhook"]
    },
    "datadogConfig": {
      "title": "DatadogConfig",
      "type": "object",
      "properties": {
        "api-key": { "type": "string" },
        "metric-p$refix": {
          "type": "string",
          "maxLength": 100,
          "pattern": "^[A-Za-z]+[A-Za-z0-9_\\.]*\\.$"
        }
      },
      "required": ["api-key", "metric-p$refix"]
    },
    "urlConfig": {
      "title": "UrlConfig",
      "type": "object",
      "properties": {
        "url": { "type": "string", "format": "uri" }
      },
      "required": ["url"]
    },
    "telegramBotConfig": {
      "title": "TelegramConfig",
      "type": "object",
      "properties": {
        "bot-token": { "type": "string" },
        "chat-id": { "type": "string" }
      },
      "required": ["bot-token", "chat-id"]
    },
    "emailConfig": {
      "title": "EmailConfig",
      "type": "object",
      "properties": {
        "emails": {
          "title": "Emails",
          "type": "array",
          "items": { "type": "string", "format": "email" },
          "default": []
        }
      },
      "required": ["emails"]
    },
    "notification": {
      "title": "Notification",
      "type": "object",
      "properties": {
        "type": { "$ref": "definitions.schema.json/#/definitions/notificationType", "format": "uri-reference" },
        "name": { "type": "string" },
        "paused": { "type": "boolean" },
        "config": {
          "title": "Config",
          "type": "object",
          "oneOf": [
            { "$ref": "definitions.schema.json/#/definitions/emailConfig", "format": "uri-reference" },
            { "$ref": "definitions.schema.json/#/definitions/telegramBotConfig", "format": "uri-reference" },
            { "$ref": "definitions.schema.json/#/definitions/datadogConfig", "format": "uri-reference" },
            { "$ref": "definitions.schema.json/#/definitions/urlConfig", "format": "uri-reference" }
          ]
        }
      },
      "required": ["type", "name", "paused", "config"]
    },
    "blockSentinel": {
      "title": "BlockSentinel",
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "type": { "type": "string", "enum": ["BLOCK"] },
        "network": { "$ref": "definitions.schema.json/#/definitions/network", "format": "uri-reference" },
        "addresses": {
          "title": "Addresses",
          "type": "array",
          "items": { "$ref": "definitions.schema.json/#/definitions/address", "format": "uri-reference" }
        },
        "abi": { "type": "string" },
        "alert-threshold": {
          "title": "AlertThreshold",
          "type": "object",
          "properties": { "amount": { "type": "integer" }, "window-seconds": { "type": "integer" } }
        },
        "paused": { "type": "boolean" },
        "autotask-condition": { "$ref": "definitions.schema.json/#/definitions/autotask", "format": "uri-reference" },
        "autotask-trigger": { "$ref": "definitions.schema.json/#/definitions/autotask", "format": "uri-reference" },
        "confirm-level": {
          "oneOf": [{ "type": "string", "enum": ["safe", "finalized"] }, { "type": "integer" }]
        },
        "notify-config": {
          "title": "NotifyConfig",
          "type": "object",
          "properties": {
            "timeout": { "type": "integer" },
            "message": { "type": "string" },
            "channels": {
              "title": "Channels",
              "type": "array",
              "items": { "$ref": "definitions.schema.json/#/definitions/notification", "format": "uri-reference" }
            }
          },
          "required": ["channels"]
        },
        "conditions": {
          "title": "Conditions",
          "type": "object",
          "properties": {
            "event": {
              "title": "Event",
              "type": "array",
              "items": {
                "title": "EventItems",
                "type": "object",
                "properties": { "signature": { "type": "string" }, "expression": { "type": "string" } },
                "required": ["signature"]
              }
            },
            "function": {
              "title": "Function",
              "type": "array",
              "items": {
                "title": "FunctionItems",
                "type": "object",
                "properties": { "signature": { "type": "string" }, "expression": { "type": "string" } },
                "required": ["signature"]
              }
            },
            "transaction": { "type": "string" }
          }
        }
      },
      "required": ["name", "type", "network", "addresses", "notify-config"]
    },
    "fortaSentinel": {
      "title": "FortaSentinel",
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "type": { "type": "string", "enum": ["FORTA"] },
        "network": { "$ref": "definitions.schema.json/#/definitions/network", "format": "uri-reference" },
        "addresses": {
          "title": "Addresses",
          "type": "array",
          "items": { "$ref": "definitions.schema.json/#/definitions/address", "format": "uri-reference" }
        },
        "abi": { "type": "string" },
        "alert-threshold": {
          "title": "AlertThreshold",
          "type": "object",
          "properties": { "amount": { "type": "integer" }, "window-seconds": { "type": "integer" } }
        },
        "paused": { "type": "boolean" },
        "autotask-condition": { "$ref": "definitions.schema.json/#/definitions/autotask", "format": "uri-reference" },
        "autotask-trigger": { "$ref": "definitions.schema.json/#/definitions/autotask", "format": "uri-reference" },
        "notify-config": {
          "title": "NotifyConfig",
          "type": "object",
          "properties": {
            "timeout": { "type": "integer" },
            "message": { "type": "string" },
            "channels": {
              "title": "Channels",
              "type": "array",
              "items": { "$ref": "definitions.schema.json/#/definitions/notification", "format": "uri-reference" }
            }
          },
          "required": ["channels"]
        },
        "conditions": {
          "title": "Conditions",
          "type": "object",
          "properties": {
            "min-scanner-count": { "type": "integer" },
            "severity": { "type": "integer", "enum": [0, 1, 2, 3, 4, 5] },
            "alert-ids": {
              "title": "AlertIDs",
              "type": "array",
              "items": { "type": "string" }
            }
          },
          "required": ["min-scanner-count"]
        },
        "forta-node-id": { "type": "string" },
        "agent-ids": {
          "title": "AgentIDs",
          "type": "array",
          "items": { "type": "string" }
        }
      },
      "anyOf": [
        {
          "required": ["agent-ids"]
        },
        {
          "required": ["addresses"]
        }
      ],
      "required": ["name", "type", "network", "notify-config"]
    },
    "sentinel": {
      "title": "Sentinel",
      "type": "object",
      "oneOf": [
        { "$ref": "definitions.schema.json/#/definitions/blockSentinel", "format": "uri-reference" },
        { "$ref": "definitions.schema.json/#/definitions/fortaSentinel", "format": "uri-reference" }
      ]
    },
    "autotask": {
      "title": "Autotask",
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "path": { "type": "string" },
        "relayer": { "$ref": "definitions.schema.json/#/definitions/relayer", "format": "uri-reference" },
        "trigger": {
          "title": "Trigger",
          "type": "object",
          "properties": {
            "type": { "title": "TriggerType", "type": "string", "enum": ["schedule", "webhook"] },
            "cron": { "title": "TriggerCron", "type": "string" },
            "frequency": { "title": "TriggerFrequency", "type": "integer" }
          },
          "if": {
            "properties": { "type": { "const": "schedule" } }
          },
          "then": {
            "oneOf": [
              {
                "required": ["cron"]
              },
              {
                "required": ["frequency"]
              }
            ]
          },
          "else": {},
          "required": ["type"]
        },
        "paused": { "type": "boolean" }
      },
      "required": ["name", "path", "trigger", "paused"]
    }
  }
}